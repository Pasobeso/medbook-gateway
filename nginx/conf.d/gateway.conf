# Basic API gateway routing to microservices


upstream users_upstream {
    server users:3000;
}

upstream booking_upstream {
    server booking:3000;
}

upstream adminer_upstream {
    server adminer:8080;
}


server {
    listen 80;
    server_name _;

    # Optional: CORS for local dev; tighten in prod
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS";
    add_header Access-Control-Allow-Headers "Authorization, Content-Type";

    if ($request_method = OPTIONS) {
        return 204;
    }

    # Health for gateway itself
    location /health { 
        access_log off;
        add_header Content-Type text/plain;
        return 200 "ok";
    }

    # USERS routes
    location /users/ {
        proxy_pass http://users_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 60s;
    }

    # BOOKING routes
    location /booking/ {
        proxy_pass http://booking_upstream/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 60s;
    }

    location = /adminer { return 301 /adminer/; }

    # Adminer
    location /adminer/ {
        # strip /adminer/ and send the rest to /
        proxy_pass http://adminer_upstream/;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_read_timeout 60s;
    }
}